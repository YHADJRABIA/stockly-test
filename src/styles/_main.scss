main {
  background-color: #fff;
  @include flexCenter(column);
  justify-content: space-around;
  width: 90vw;
  min-height: 100vh;
  & > :first-child {
    margin: 5rem 0;
  }
}

.exercises {
  & > article {
    background-color: $secondaryColour;
    @include flexCenter(column);
    justify-content: space-evenly;
    margin: 2rem 0;
    width: 80vw;
    min-height: 75vh;
    border-radius: 2rem;
    box-shadow: inset 5rem 5rem 10rem $thirdColour;
    & > :first-child {
      margin: 2rem 0;
    }
  }

  & > :nth-child(even) {
    background-color: $thirdColour;
  }
}

/*------------------- Input-output block  ---------------*/

// Input block

.text-input {
  position: relative;
  margin: 10rem 0;

  input[type="text"] {
    display: inline-block;
    width: 70vw;
    height: 8rem;
    outline: none;
    border: 1px solid lightgray;
    border-radius: 3px;
    padding: 1rem 1rem 1rem 10rem;
    transition: all 0.5s ease-out;
  }

  input[type="text"] + label {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 8rem;
    line-height: 8rem;
    color: white;
    border-radius: 5px;
    padding: 0 2rem;
    background: $specialColour;
    transform: translateZ(0) translateX(0);
    transition: all 0.5s ease-in;
    transition-delay: 0.2s;
  }

  input[type="text"]:focus + label {
    transform: translateY(-120%) translateX(0%);
    border-radius: 3px;
    transition: all 0.5s ease-out;
  }

  input[type="text"]:focus {
    padding: 1rem;
    transition: all 0.3s ease-out;
    transition-delay: 0.2s;
  }
}

.text-output {
  font-weight: bold;
  @include flexCenter(column);
  justify-content: center;
  margin: 5rem 0;
  min-width: 45vw;
  min-height: 30vh;
  border-radius: 2rem;
  overflow-wrap: break-word;
  max-width: 60vw;
  overflow: hidden;
  animation: pulse 3s forwards;
  transition: all 0.5s ease-out;
  & h3 {
    max-width: 95%;
  }
}

/*------------- Reponsive ---------*/
//Tablet
@media only screen and (min-width: map-get($breakpoints, tablet)) {
  //Desktop
  @media screen and (min-width: map-get($breakpoints, desktop)) {
    .text-input {
      input[type="text"] {
        width: 40vw;
      }
    }
  }
}
